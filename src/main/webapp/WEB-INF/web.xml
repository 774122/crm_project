<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

        <!--注册中央调度器-->
        <servlet>
            <servlet-name>myWeb</servlet-name>
            <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
            <!--自定义spring-mvc配置文件的读取位置-->
            <init-param>
                <!--spring-mvc配置文件的位置的属性-->
                <param-name>contextConfigLocation</param-name>
                <!--指定自定义文件的位置-->
                <param-value>classpath:config/dispatcherServlet.xml</param-value>
            </init-param>
            <!--希望在服务器启动后创建Servlet对象:参数1表示创建对象的顺序，数字越小，创建越早-->
            <load-on-startup>1</load-on-startup>
        </servlet>
        <servlet-mapping>
            <servlet-name>myWeb</servlet-name>
            <!--使用框架时，url-pattern可以使用两种值
                    1.使用扩展名方式，语法 *.xxx  例如 *.do , *.action。表示请求中此种格式的文件交给它来处理
                    2.使用 / 。需要在spring-mvc配置文件中加入静态文件访问方法-->
            <url-pattern>*.do</url-pattern>
        </servlet-mapping>

        <!--注册Spring的监听器，用于创建 Spring 容器及将创建好的 Spring 容器对象放入到 ServletContext 的作用域中-->
        <context-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/applicationContext.xml</param-value>
        </context-param>
        <listener>
            <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
        </listener>

        <!--过滤器，解决post请求方式参数中文乱码的现象-->
        <filter>
            <filter-name>characterEncodingFilter</filter-name>
            <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
            <!--设置项目中使用的字符编码-->
            <init-param>
                <param-name>encoding</param-name>
                <param-value>utf-8</param-value>
            </init-param>
            <!--强制请求对象（HttpServletRequest）使用encoding编码-->
            <init-param>
                <param-name>forceRequestEncoding</param-name>
                <param-value>true</param-value>
            </init-param>
            <!--强制应答对象（HttpServletRequest）使用encoding编码-->
            <init-param>
                <param-name>forceResponseEncoding</param-name>
                <param-value>true</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>characterEncodingFilter</filter-name>
            <url-pattern>/*</url-pattern>  <!-- /* 表示强制所有请求先通过过滤器处理-->
        </filter-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
</web-app>